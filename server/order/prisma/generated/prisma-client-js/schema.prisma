// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "./generated/prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  order     Order[]
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  RefresToken RefreshToken[]
  @@map("user")
}

model RefreshToken {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  refreshToken String
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())

  @@map("refresh_token")
}

model Order {
  id         Int            @id @default(autoincrement())
  user       User           @relation(fields: [userId], references: [id])
  userId     Int
  address    String
  totalPrice Float
  status     OrderStatus    @default(CREATED)
  products   ProductOrder[]
  updatedAt  DateTime       @updatedAt
  createdAt  DateTime       @default(now())

  @@map("order")
}

model ProductOrder {
  id      Int    @id @default(autoincrement())
  name    String
  image   String
  price   Float
  count   Int
  order   Order  @relation(fields: [orderId], references: [id])
  orderId Int

  @@map("product_order")
}

model Product {
  id        Int      @id @default(autoincrement())
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  name      String
  image     String
  price     Float

  @@map("product")
}

enum Role {
  USER   @map("user")
  ADMIN  @map("admin")
}

enum OrderStatus {
  CREATED    @map("created")
  CANCELED   @map("canceled")
  CONFIRMED  @map("confirmed")
  DELIVERED  @map("delivered")
}
